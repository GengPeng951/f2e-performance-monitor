{
  "compilerOptions": {
    "outDir": "es",
    "module": "esnext",
    "lib": ["esnext", "dom"],
    "allowJs": false,
    "jsx": "react",
    "moduleResolution": "node",
    "rootDir": "src",
    /* 基本选项 */
    "target": "es5", // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'（"ESNext"表示最新的ES语法，包括还处在stage X阶段）
    // "module": "commonjs", // 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015'
    // "checkJs": true, // 报告 javascript 文件中的错误
    "declaration": true, // 生成相应的 '.d.ts' 文件
    // "declarationMap": true, // 生成相应的 '.d.ts' 文件
    // "sourceMap": true, // 生成相应的 '.map' 文件
    // "outFile": "./", // 将输出文件合并为一个文件
    "removeComments": true, // 删除编译后的所有的注释
    "noEmit": false, // 不生成输出文件
    "importHelpers": true, // 从 tslib 导入辅助工具函数
    "isolatedModules": true, // 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）.

    /* 严格的类型检查选项 */
    "strict": true, // 启用所有严格类型检查选项
    "noImplicitAny": true, // 在表达式和声明上有隐含的 any类型时报错
    "strictNullChecks": true, // 启用严格的 null 检查
    "noImplicitThis": true, // 当 this 表达式值为 any 类型的时候，生成一个错误
    "alwaysStrict": true, // 以严格模式检查每个模块，并在每个文件里加入 'use strict'
    "emitDeclarationOnly": true /* 额外的检查 */,
    "noUnusedLocals": true, // 有未使用的变量时，抛出错误
    "noUnusedParameters": true, // 有未使用的参数时，抛出错误
    "noImplicitReturns": true, // 并不是所有函数里的代码都有返回值时，抛出错误
    "noFallthroughCasesInSwitch": true // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）
  },
  /* 指定编译文件或排除指定编译文件 */
  "include": ["src/**/*"],
  "exclude": ["node_modules", "**/__tests__"]
}
